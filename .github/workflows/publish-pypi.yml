name: Publish to PyPI

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"
    paths-ignore:
      - 'docs/**'
      - 'mkdocs.yml'

env:
  PACKAGE_NAME: "irene-sankey"

jobs:
  details:
    name: Extract Tag Details and Pre-checks
    runs-on: ubuntu-latest
    environment: release-with-approval
    permissions:
      contents: read
    outputs:
      new_version: ${{ steps.extract_tag.outputs.new_version }}
      tag_name: ${{ steps.extract_tag.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract Tag and Details
        id: extract_tag
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          NEW_VERSION=$(echo $TAG_NAME | awk -F'-' '{print $1}')
          echo "new_version=$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

      - name: Fetch PyPI Version
        id: check_pypi
        run: |
          response=$(curl -s https://pypi.org/pypi/${{ env.PACKAGE_NAME }}/json || echo "{}")
          latest_previous_version=$(echo "$response" | jq -r '.releases | keys_unsorted | sort | .[-1]' || echo "0.0.0")
          if [ "$latest_previous_version" == "null" ] || [ -z "$latest_previous_version" ]; then
            latest_previous_version="0.0.0"
          fi
          echo "latest_previous_version=$latest_previous_version" >> $GITHUB_ENV

      - name: Compare Versions
        run: |
          python -c "
          from packaging.version import parse
          new_version = parse('${{ steps.extract_tag.outputs.new_version }}')
          latest_version = parse('${{ env.latest_previous_version }}')
          if not new_version > latest_version:
              raise ValueError(f'New version {new_version} is not greater than latest {latest_version}')
          "

  test_backward_compatibility:
    name: Test Backward Compatibility
    needs: details
    runs-on: ubuntu-latest
    permissions: 
      contents: read
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies for testing
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run Tox Tests
        run: tox

  setup_and_build:
    name: Setup and Build
    needs: [details, test_backward_compatibility]
    runs-on: ubuntu-latest
    permissions: 
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Ensure Python Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv python3-pip

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Set Project Version
        run: poetry version ${{ needs.details.outputs.new_version }}

      - name: Install Dependencies
        run: poetry install --sync --no-interaction

      - name: Build Distribution
        run: poetry build

      - name: Verify Build Artifacts
        run: |
          if [ ! -d "dist/" ]; then
            echo "Distribution artifacts are missing."
            exit 1
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  pypi_publish:
    name: Publish to PyPI
    needs: [setup_and_build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      id-token: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish Distribution
        uses: pypa/gh-action-pypi-publish@67339c736fd9354cd4f8cb0b744f2b82a74b5c70
        with:
          password: ${{ secrets.PYPI_TOKEN }}
